#include <bits/stdc++.h>
using namespace std;
class heap{
   public:
   int arr[1000];
   int size=0;
   heap()
   {
       arr[0]=0;
   }
   void insert(int value)
   {
       size= size+1;
      int index=size;
      arr[index]=value;
      while(index>1)
      {
          int parent = index/2;
          if(arr[parent]<arr[index])
          {
              swap(arr[index],arr[parent]);
              index=parent;
          }
          else{
              return;
          }
      }

   }
   void heapify(int i)
   {
       int left=2*i;
       int right=2*i+1;
       int largest=i;
       if(left<=size && arr[left]>arr[i])
       {
           largest=left;
       }
       if(right<=size && arr[right]>arr[largest])
       {
           largest=right;
       }
       if(largest!=i )
       {
           swap(arr[i],arr[largest]);
           heapify(largest);
       }
   }
   void deleteInheap()
   {
       arr[1]=arr[size];
       size--;
       heapify(1);
     
   }
   void print()
   {
       for(int i=1; i<=size; i++)
       {
           cout<<arr[i]<<" ";
       }
       cout<<endl;
   }

};
int main()
{
    heap hp;
    hp.insert(60);
    hp.insert(70);
    hp.insert(71);
    hp.insert(43);
     hp.print();
    hp.deleteInheap();
    hp.print();
}// insertu=ion and deletion o(log(n)) get_max O(1)
